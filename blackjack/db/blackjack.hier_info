|pin_ass
clock_50 => Blackjack:do.clk
sw[0] => Blackjack:do.cardValue[0]
sw[1] => Blackjack:do.cardValue[1]
sw[2] => Blackjack:do.cardValue[2]
sw[3] => Blackjack:do.cardValue[3]
sw[4] => Blackjack:do.cardReady
sw[5] => ~NO_FANOUT~
sw[6] => ~NO_FANOUT~
sw[7] => ~NO_FANOUT~
sw[8] => ~NO_FANOUT~
sw[9] => Blackjack:do.sw_clk
key[0] => Blackjack:do.start
ledg[5] <= Blackjack:do.newCard
ledg[6] <= Blackjack:do.lost
ledg[7] <= Blackjack:do.finished
ledr[0] <= Blackjack:do.score[0]
ledr[1] <= Blackjack:do.score[1]
ledr[2] <= Blackjack:do.score[2]
ledr[3] <= Blackjack:do.score[3]
ledr[4] <= Blackjack:do.score[4]
ledr[5] <= Blackjack:do.debug[0]
ledr[6] <= Blackjack:do.debug[1]
ledr[7] <= Blackjack:do.debug[2]
ledr[8] <= Blackjack:do.debug[3]
ledr[9] <= Blackjack:do.debug[4]
HEX1[0] <= Blackjack:do.data7s[0]
HEX1[1] <= Blackjack:do.data7s[1]
HEX1[2] <= Blackjack:do.data7s[2]
HEX1[3] <= Blackjack:do.data7s[3]
HEX1[4] <= Blackjack:do.data7s[4]
HEX1[5] <= Blackjack:do.data7s[5]
HEX1[6] <= Blackjack:do.data7s[6]
HEX0[0] <= Blackjack:do.addr7s[0]
HEX0[1] <= Blackjack:do.addr7s[1]
HEX0[2] <= Blackjack:do.addr7s[2]
HEX0[3] <= Blackjack:do.addr7s[3]
HEX0[4] <= Blackjack:do.addr7s[4]
HEX0[5] <= Blackjack:do.addr7s[5]
HEX0[6] <= Blackjack:do.addr7s[6]


|pin_ass|Blackjack:do
clk => Blackjack_FSM:BJ_FSM.clk
clk => Blackjack_DataPath:BJ_DP.clk
clk => Blackjack_7Seg:BJ_7seg.clk
sw_clk => ~NO_FANOUT~
start => Blackjack_FSM:BJ_FSM.rst
start => Blackjack_DataPath:BJ_DP.rst
start => Blackjack_7Seg:BJ_7seg.rst
cardValue[0] => Blackjack_DataPath:BJ_DP.cardValue[0]
cardValue[1] => Blackjack_DataPath:BJ_DP.cardValue[1]
cardValue[2] => Blackjack_DataPath:BJ_DP.cardValue[2]
cardValue[3] => Blackjack_DataPath:BJ_DP.cardValue[3]
cardReady => Blackjack_FSM:BJ_FSM.cardReady
newCard <= Blackjack_FSM:BJ_FSM.newCard
lost <= Blackjack_FSM:BJ_FSM.lost
finished <= Blackjack_FSM:BJ_FSM.finished
score[0] <= Blackjack_DataPath:BJ_DP.score[0]
score[1] <= Blackjack_DataPath:BJ_DP.score[1]
score[2] <= Blackjack_DataPath:BJ_DP.score[2]
score[3] <= Blackjack_DataPath:BJ_DP.score[3]
score[4] <= Blackjack_DataPath:BJ_DP.score[4]
data7s[0] <= Blackjack_7Seg:BJ_7seg.data[0]
data7s[1] <= Blackjack_7Seg:BJ_7seg.data[1]
data7s[2] <= Blackjack_7Seg:BJ_7seg.data[2]
data7s[3] <= Blackjack_7Seg:BJ_7seg.data[3]
data7s[4] <= Blackjack_7Seg:BJ_7seg.data[4]
data7s[5] <= Blackjack_7Seg:BJ_7seg.data[5]
data7s[6] <= Blackjack_7Seg:BJ_7seg.data[6]
debug[0] <= Blackjack_FSM:BJ_FSM.debug[0]
debug[1] <= Blackjack_FSM:BJ_FSM.debug[1]
debug[2] <= Blackjack_FSM:BJ_FSM.debug[2]
debug[3] <= Blackjack_FSM:BJ_FSM.debug[3]
debug[4] <= Blackjack_FSM:BJ_FSM.debug[4]
addr7s[0] <= Blackjack_7Seg:BJ_7seg.addr[0]
addr7s[1] <= Blackjack_7Seg:BJ_7seg.addr[1]
addr7s[2] <= Blackjack_7Seg:BJ_7seg.addr[2]
addr7s[3] <= Blackjack_7Seg:BJ_7seg.addr[3]
addr7s[4] <= Blackjack_7Seg:BJ_7seg.addr[4]
addr7s[5] <= Blackjack_7Seg:BJ_7seg.addr[5]
addr7s[6] <= Blackjack_7Seg:BJ_7seg.addr[6]


|pin_ass|Blackjack:do|Blackjack_FSM:BJ_FSM
clk => ace[0]~reg0.CLK
clk => ace[1]~reg0.CLK
clk => ace[2]~reg0.CLK
clk => ace[3]~reg0.CLK
clk => ace[4]~reg0.CLK
clk => y~8.DATAIN
rst => ace[0]~reg0.ACLR
rst => ace[1]~reg0.ACLR
rst => ace[2]~reg0.ACLR
rst => ace[3]~reg0.ACLR
rst => ace[4]~reg0.ACLR
rst => y~10.DATAIN
cardReady => Selector1.IN4
cardReady => Selector0.IN2
cardReady => Selector2.IN2
newCard <= Selector6.DB_MAX_OUTPUT_PORT_TYPE
lost <= lost.DB_MAX_OUTPUT_PORT_TYPE
finished <= finished.DB_MAX_OUTPUT_PORT_TYPE
cmp11 => Selector4.IN3
cmp11 => Selector3.IN2
cmp16 => finished.OUTPUTSELECT
cmp16 => y.OUTPUTSELECT
cmp16 => y.OUTPUTSELECT
cmp16 => y.OUTPUTSELECT
cmp16 => y.OUTPUTSELECT
cmp16 => y.OUTPUTSELECT
cmp16 => y.OUTPUTSELECT
cmp16 => y.OUTPUTSELECT
cmp16 => y.OUTPUTSELECT
cmp16 => Selector6.IN2
cmp21 => y.OUTPUTSELECT
cmp21 => y.OUTPUTSELECT
cmp21 => y.OUTPUTSELECT
cmp21 => y.OUTPUTSELECT
cmp21 => y.OUTPUTSELECT
cmp21 => y.OUTPUTSELECT
cmp21 => y.OUTPUTSELECT
cmp21 => y.OUTPUTSELECT
cmp21 => finished.DATAB
sel <= sel.DB_MAX_OUTPUT_PORT_TYPE
debug[0] <= WideOr8.DB_MAX_OUTPUT_PORT_TYPE
debug[1] <= WideOr7.DB_MAX_OUTPUT_PORT_TYPE
debug[2] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
debug[3] <= debug[3].DB_MAX_OUTPUT_PORT_TYPE
debug[4] <= <GND>
ace[0] <= ace[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ace[1] <= ace[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ace[2] <= ace[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ace[3] <= ace[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ace[4] <= ace[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
enaLoad <= enaLoad.DB_MAX_OUTPUT_PORT_TYPE
enaAdd <= enaAdd.DB_MAX_OUTPUT_PORT_TYPE
enaScore <= Selector7.DB_MAX_OUTPUT_PORT_TYPE


|pin_ass|Blackjack:do|Blackjack_DataPath:BJ_DP
clk => currentScore[0].CLK
clk => currentScore[1].CLK
clk => currentScore[2].CLK
clk => currentScore[3].CLK
clk => currentScore[4].CLK
clk => data[0].CLK
clk => data[1].CLK
clk => data[2].CLK
clk => data[3].CLK
clk => data[4].CLK
clk => score[0]~reg0.CLK
clk => score[1]~reg0.CLK
clk => score[2]~reg0.CLK
clk => score[3]~reg0.CLK
clk => score[4]~reg0.CLK
rst => currentScore[0].ACLR
rst => currentScore[1].ACLR
rst => currentScore[2].ACLR
rst => currentScore[3].ACLR
rst => currentScore[4].ACLR
rst => data[0].ACLR
rst => data[1].ACLR
rst => data[2].ACLR
rst => data[3].ACLR
rst => data[4].ACLR
rst => score[0]~reg0.ACLR
rst => score[1]~reg0.ACLR
rst => score[2]~reg0.ACLR
rst => score[3]~reg0.ACLR
rst => score[4]~reg0.ACLR
cardValue[0] => LessThan0.IN8
cardValue[0] => Equal0.IN7
cardValue[0] => currentScore.DATAA
cardValue[1] => LessThan0.IN7
cardValue[1] => Equal0.IN6
cardValue[1] => currentScore.DATAA
cardValue[2] => LessThan0.IN6
cardValue[2] => Equal0.IN5
cardValue[2] => currentScore.DATAA
cardValue[3] => LessThan0.IN5
cardValue[3] => Equal0.IN4
cardValue[3] => currentScore.DATAA
score[0] <= score[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
score[1] <= score[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
score[2] <= score[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
score[3] <= score[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
score[4] <= score[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sel => currentScore.OUTPUTSELECT
sel => currentScore.OUTPUTSELECT
sel => currentScore.OUTPUTSELECT
sel => currentScore.OUTPUTSELECT
sel => currentScore.DATAB
enaLoad => currentScore.OUTPUTSELECT
enaLoad => currentScore.OUTPUTSELECT
enaLoad => currentScore.OUTPUTSELECT
enaLoad => currentScore.OUTPUTSELECT
enaLoad => currentScore.OUTPUTSELECT
enaAdd => data[4].ENA
enaAdd => data[3].ENA
enaAdd => data[2].ENA
enaAdd => data[1].ENA
enaAdd => data[0].ENA
enaScore => score[4]~reg0.ENA
enaScore => score[3]~reg0.ENA
enaScore => score[2]~reg0.ENA
enaScore => score[1]~reg0.ENA
enaScore => score[0]~reg0.ENA
cmp11 <= Equal2.DB_MAX_OUTPUT_PORT_TYPE
cmp16 <= LessThan1.DB_MAX_OUTPUT_PORT_TYPE
cmp21 <= LessThan2.DB_MAX_OUTPUT_PORT_TYPE


|pin_ass|Blackjack:do|Blackjack_7Seg:BJ_7seg
clk => ~NO_FANOUT~
rst => ~NO_FANOUT~
score[0] => Mux7.IN19
score[0] => Mux8.IN19
score[0] => Mux9.IN10
score[0] => Mux10.IN19
score[0] => Mux11.IN10
score[0] => Mux12.IN10
score[0] => Mux13.IN19
score[0] => LessThan0.IN10
score[0] => LessThan1.IN10
score[1] => LessThan0.IN9
score[1] => LessThan1.IN9
score[1] => Add1.IN8
score[1] => digit0.DATAA
score[1] => digit0[1].DATAB
score[2] => LessThan0.IN8
score[2] => Add0.IN6
score[2] => LessThan1.IN8
score[2] => Add1.IN7
score[2] => digit0.DATAA
score[3] => LessThan0.IN7
score[3] => Add0.IN5
score[3] => LessThan1.IN7
score[3] => Add1.IN6
score[3] => digit0.DATAA
score[4] => LessThan0.IN6
score[4] => Add0.IN4
score[4] => LessThan1.IN6
score[4] => Add1.IN5
data[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
addr[0] <= Mux13.DB_MAX_OUTPUT_PORT_TYPE
addr[1] <= Mux12.DB_MAX_OUTPUT_PORT_TYPE
addr[2] <= Mux11.DB_MAX_OUTPUT_PORT_TYPE
addr[3] <= Mux10.DB_MAX_OUTPUT_PORT_TYPE
addr[4] <= Mux9.DB_MAX_OUTPUT_PORT_TYPE
addr[5] <= Mux8.DB_MAX_OUTPUT_PORT_TYPE
addr[6] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE


